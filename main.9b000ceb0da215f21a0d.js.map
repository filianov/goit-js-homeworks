{"version":3,"sources":["webpack:///./script.tree.js"],"names":["list","document","querySelector","countryContainer","addEventListener","debounce","e","fetchCountries","value","target","fetch","then","response","json","result","console","log","updateUI","countries","length","innerHTML","country","name","capital","population","languages","flag","map","language","nativeName","join","lis","PNotify","error","text"],"mappings":"gNAGMA,EAAOC,SAASC,cAAc,YAC9BC,EAAmBF,SAASC,cAAc,yBAClCD,SAASC,cAAc,aAE/BE,iBACJ,QACAC,KAAS,SAAAC,GAAC,OAAIC,EAAeD,KAAI,MAGnC,IAAMC,EAAiB,SAAAD,GAAK,IAClBE,EAAUF,EAAEG,OAAZD,MACHA,GACLE,MAAM,yCAAyCF,GAC5CG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAEJ,OADAC,QAAQC,IAAIF,GACLA,KAERH,MAAK,SAAAG,GAAM,OAAIG,EAASH,OAGvBG,EAAW,SAAAC,GACf,IAAMC,EAASD,EAAUC,OAGzB,GAFAnB,EAAKoB,UAAY,GACjBjB,EAAiBiB,UAAY,GACd,IAAXD,EAAc,CAChB,IAAME,EAAUH,EAAU,GAClBI,EAA+CD,EAA/CC,KAAMC,EAAyCF,EAAzCE,QAASC,EAAgCH,EAAhCG,WAAYC,EAAoBJ,EAApBI,UAAWC,EAASL,EAATK,KAI9CvB,EAAiBiB,UAAjB,iBACUE,EADV,+BAEmBC,EAFnB,iCAGqBC,EAHrB,gCAFEC,EAAUE,KAAI,SAAAC,GAAQ,aAAWA,EAASC,WAApB,WAAuCC,KAAK,IAEpE,gDAKoCJ,EALpC,kDAOK,GAAIP,GAAU,GAAKA,GAAU,GAAI,CACtC,IAAMY,EAAMb,EAAUS,KAAI,SAAAN,GAAO,aAAWA,EAAQC,KAAnB,WAAgCQ,KAAK,IACtE9B,EAAKoB,UAAYW,OAEjBC,IAAQC,MAAM,CACZC,KAAM,iE","file":"main.9b000ceb0da215f21a0d.js","sourcesContent":["import debounce from '../node_modules/lodash.debounce/index.js';\nimport PNotify from '../node_modules/pnotify/dist/es/PNotify.js';\n\nconst list = document.querySelector('.js-list');\nconst countryContainer = document.querySelector('.js-country-container');\nconst input = document.querySelector('.js-input');\n\ninput.addEventListener(\n  'input',\n  debounce(e => fetchCountries(e), 500),\n);\n\nconst fetchCountries = e => {\n  const { value } = e.target;\n  if (!value) return;\n  fetch(`https://restcountries.eu/rest/v2/name/${value}`)\n    .then(response => response.json())\n    .then(result => {\n      console.log(result);\n      return result;\n    })\n    .then(result => updateUI(result));\n};\n\nconst updateUI = countries => {\n  const length = countries.length;\n  list.innerHTML = '';\n  countryContainer.innerHTML = '';\n  if (length === 1) {\n    const country = countries[0];\n    const { name, capital, population, languages, flag } = country;\n    const getLanguages = () =>\n      languages.map(language => `<li>${language.nativeName}</li>`).join('');\n\n    countryContainer.innerHTML = `\n        <h1>${name}</h1>\n        <h2>Capital: ${capital}</h2>\n        <p>Population: ${population}</p>\n        <ul>Languages: ${getLanguages()}</ul>\n        <object id=\"svg-object\" data=\"${flag}\" type=\"image/svg+xml\"></object>\n        `;\n  } else if (length >= 2 && length <= 10) {\n    const lis = countries.map(country => `<li>${country.name}</li>`).join('');\n    list.innerHTML = lis;\n  } else\n    PNotify.error({\n      text: 'Too many matches found. Please enter a more specific query!',\n    });\n};\n"],"sourceRoot":""}